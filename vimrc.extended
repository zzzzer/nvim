"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" GUI
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


" Show < or > when characters are not displayed on the left or right.
:set list listchars=precedes:<,extends:>
" Same, but also show tabs and trailing spaces.
:set list listchars=tab:>-,trail:.,precedes:<,extends:>

if has("gui_running")
  set background=dark
  :colorscheme solarized
  ":colorscheme zenburn
  ":colorscheme eclipse
    "if has("gui_gtk2")
        "set guifont=Courier\ New\ 9
    "elseif has("gui_kde")
        "echoerr "Sorry, please look into your kvim documentation"
    "elseif has("x11")
        "set guifont=-*-courier-medium-r-normal-*-*-180-*-*-m-*-*
    "else
        "set guifont=Courier_New:h11:cDEFAULT
    "endif
"set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim 
" use nerdtree
"autocmd VimEnter * NERDTree
" remove the wierd characters you get sometimes and use plus instead for browsing
let g:NERDTreeDirArrows=0
" jump to previous windows after opening nerdtree 
autocmd VimEnter * wincmd p
" shut down vim if nerdtree is the last window 
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
endif

function! ClearRegisters()
    let regs='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789/-="*+'
    let i=0
    while (i<strlen(regs))
        exec 'let @'.regs[i].'=""'
        let i=i+1
    endwhile
endfunction
 
command! ClearRegisters call ClearRegisters()

"clean fugitive buffers when not being viewed
autocmd BufReadPost fugitive://* set bufhidden=deleteautocmd BufReadPost fugitive://* set bufhidden=delete

"remapping this in tasklist from leader t to leader tt to resolve conflict with other plugins
map <leader>tt <Plug>TaskList

"use  pathogen for installation for plugins that use
runtime bundle/vim-pathogen/autoload/pathogen.vim


execute pathogen#infect() 
"call pathogen#incubate()
call pathogen#helptags()
syntax on
filetype plugin indent on

"ctrl p plugin 
set runtimepath^=~/.vim/bundle/ctrlp.vim
" Ignore some folders and files for CtrlP indexing
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|__pycache__|\.yardoc\|\.ropeproject$',
  \ 'file': '\.so$\|\.dat$|\.DS_Store$'
  \ }
" python stuff

" airline extensions 
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
set laststatus=2

