"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" GUI
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


" Show < or > when characters are not displayed on the left or right.
:set list listchars=precedes:<,extends:>
" Same, but also show tabs and trailing spaces.
:set list listchars=tab:>-,trail:.,precedes:<,extends:>

if has("gui_running")
  ":colorscheme zenburn
  :colorscheme eclipse
endif

if has("gui_running")
    if has("gui_gtk2")
        set guifont=Courier\ New\ 9
    elseif has("gui_kde")
        echoerr "Sorry, please look into your kvim documentation"
    elseif has("x11")
        set guifont=-*-courier-medium-r-normal-*-*-180-*-*-m-*-*
    else
        set guifont=Courier_New:h11:cDEFAULT
    endif
endif

"
" Controls how file tabs are displayed
"
" Forinfo on this one, see http://blog.golden-ratio.net/2008/08/19/using-tabs-in-vim/
"
if v:version >= 700
  function! GuiTabLabel()
        " add the tab number
        let label = '['.tabpagenr()

        " modified since the last save?
        let buflist = tabpagebuflist(v:lnum)
        for bufnr in buflist
                if getbufvar(bufnr, '&modified')
                        let label .= '*'
                        break
                endif
        endfor

        " count number of open windows in the tab
        let wincount = tabpagewinnr(v:lnum, '$')
        if wincount > 1
                let label .= ', '.wincount
        endif
        let label .= '] '

        " add the file name without path information
        let n = bufname(buflist[tabpagewinnr(v:lnum) - 1])
        let label .= fnamemodify(n, ':t')

        return label
  endfun
  set guitablabel=%{GuiTabLabel()}
endif
" use nerdtree
autocmd VimEnter * NERDTree
" remove the wierd characters you get sometimes and use plus instead for browsing
let g:NERDTreeDirArrows=0
" jump to previous windows after opening nerdtree 
autocmd VimEnter * wincmd p
" shut down vim if nerdtree is the last window 
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

"use  pathogen for installation for plugins that use
call pathogen#infect() 
syntax on
filetype plugin indent on
call add(g:pathogen_disabled, 'command-t')

"ctrl p plugin 
set runtimepath^=~/.vim/bundle/ctrlp.vim


"vundle manger for those that need it
set nocompatible               " be iMproved
 filetype off                   " required!

 set rtp+=~/.vim/bundle/vundle/
 call vundle#rc()

 " let Vundle manage Vundle
 " required! 
 Bundle 'gmarik/vundle'
 Bundle  'Valloric/YouCompleteMe'


" python stuff
"so ~/.vimrc.python
"so ~/.vim/.vimrc.python_pydiction
 "so ~/.vimrc.python_jedi


